import telebot
from telebot import types
from telebot import util

bot = telebot.TeleBot('6226915086:AAEN1Sr9j2RJnfrZrGXZKBkdEQwPQ7LoOEY')

@bot.message_handler(commands=['starttwo'])
def starttwo(message):
    bot.send_message(message.chat.id,  '–ü—Ä–∏–≤–µ—Ç –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç üòä –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å')
    
@bot.message_handler(commands=['id'])
def starttwo(message):
    bot.send_message(message.chat.id, message.chat.id)
    
    
@bot.message_handler(commands=['–ü—Å–µ–≤–¥–æ–Ω–∏–º'])
def starttwo(message):
    bot.send_message(message.chat.id, str(message.from_user.username))
     

    
@bot.message_handler(commands=['–ò–º—è'])
def starttwo(message):
    bot.send_message(message.chat.id, str(message.from_user.first_name))
     
def salam(message):
    return message.text == "–°–∞–ª–∞–º –∞–ª–µ–π–∫—É–º"

@bot.message_handler(func=salam)
def start(message):
    bot.reply_to(message, '–í–∞–∞–ª–µ–π–∫—É–º —Å–∞–ª–∞–º. –ú–æ–π —Ö–æ–∑—è–∏–Ω –∑–∞–Ω—è—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç')

def hwo_baizak(message):
    return message.text == "–ö—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å?"

@bot.message_handler(func=hwo_baizak)
def hwo(message):
    bot.reply_to(message, '–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å <strong>–ë–∞–π–∑–∞–∫ </strong> üòé', parse_mode='html')

def salam(message):
    return message.text == "–ü—Ä–∏–≤–µ—Ç"

@bot.message_handler(func=salam)
def start(message):
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç –¥–æ—Ä–æ–≥—É—à–∞')

def jan(message):
    return message.text == "–ñ–∞–Ω"

@bot.message_handler(func=jan)
def jan(message):
    bot.reply_to(message, '–æ—É—É –∂–∞–Ω—ã–º —É–≥—É–ø –∂–∞—Ç–∞–º üòä')
    
def good_morning(message):
    return message.text == "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ –∂–∞–Ω"

@bot.message_handler(func=good_morning)
def good_morning(message):
    bot.reply_to(message, '–î–æ–±—Ä–æ–µ ‚ù§Ô∏è')
    

def what(message):
    return message.text == "–ß–µ–º —Ç—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?"

@bot.message_handler(func=what)
def what(message):
    bot.reply_to(message, '–õ–µ–∂—É \n –¥—É–º–∞—é —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å —Ç–æ–±–æ–π ')
    
    
def hwo(message):
    return message.text == "–ö—Ç–æ —Ç—ã?"

@bot.message_handler(func=hwo)
def hwo(message):
    bot.reply_to(message, '–Ø –ø–æ–º–æ—â—å–Ω–∏–∫ —Ö–æ–∑—è–∏–Ω–∞ –ë–∞–π–∑–∞–∫–∞ ')
    
    
def hwo(message):
    return message.text == "–¢—ã –º–æ—ë —Å–æ–ª–Ω—Ü–µ?"

@bot.message_handler(func=hwo)
def hwo(message):
    bot.reply_to(message, '<strong>–ù–µ—Ç</strong>', parse_mode='html')
    
def hwo_two(message):
    return message.text == "–ö–∞–∫ –¥–µ–ª–∞?"

@bot.message_handler(func=hwo_two)
def hwo_two(message):
    bot.reply_to(message, '<strong>—Ç–∞–∫ —Å–µ–±–µ</strong> \n <b>–ê —Ç—ã</>', parse_mode='html')
    
@bot.message_handler(content_types=['photo'])
def photo_one(message):
    bot.send_message(message.chat.id, '–í–∞—É—É –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ ü§©')

@bot.message_handler(content_types=['document'])
def document_one(message):
    bot.send_message(message.chat.id, '<b>–°–ø–∞—Å–∏–±–æ</b> –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é \n <em>—Ç—ã –ª—É—á—à–∏–π –±—Ä–æ</em> üëç', parse_mode='html')

@bot.message_handler(content_types=['voice'])
def audio_one(message):
    bot.send_message(message.chat.id, '—É —Ç–µ–±—è –≥–æ–ª–æ—Å –∫–∞–∫ –¥–µ–≤—á–∞—Ç–æ–µ ü§≠')


@bot.message_handler(content_types=['video'])
def video_one(message):
    bot.send_message(message.chat.id, '—â—è—Å... \n –∑–∞–≥—Ä—É–∑–∫–∞ \n –Ω—É –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ üòè')

# @bot.message_handler(regexp=r'[0-9]+')
# def sum_one(message):
    # bot.send_message(message.chat.id, '–¢—ã —á—Ç–æ —à–∏—Ç–∞—Ç—å –Ω–µ —É–º–µ–µ—à—å \n –ù–∞—É—á–∏—Å —à–∏—Ç–∞—Ç—å')

@bot.message_handler(commands=['itspace'])
def itspace(message):
    bot.send_message(message.chat.id, '<i>itspace</i>',parse_mode='html')
     
     
@bot.message_handler(commands=['button'])
def button(message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton(text='–∫–Ω–æ–ø–∫–∞ –æ–¥–∏–Ω')
    btn2 = types.KeyboardButton(text='–∫–Ω–æ–ø–∫–∞ –¥–≤–∞')
    kb.add(btn1, btn2)
    bot.send_message(message.chat.id, '–∫–Ω–æ–ø–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', reply_markup=kb)


@bot.message_handler(commands=['links'])
def button_one(message):
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn_one = types.InlineKeyboardButton(text='—Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–∏—Ç—Ö–∞–±', url='https://github.com/Baizak04')
    btn_two = types.InlineKeyboardButton(text='—Å—Å—ã–ª–∫–∞ –Ω–∞ instagram', url='https://www.instagram.com/nadurbekov_144/')
    kb.add(btn_one, btn_two)
    bot.send_message(message.chat.id, '—Å—Å—ã–ª–∫–∏ ü§≠', reply_markup=kb)

@bot.message_handler(commands=['photo1'])
def photo1(message):
    file = open('photo1.jpg', 'rb')
    bot.send_photo(message.chat.id, file, '–§–æ—Ç–æ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞')

@bot.message_handler(commands=['photo2'])
def photo2(message):
    file = open('photo2.jpeg', 'rb')
    bot.send_photo(message.chat.id, file, '–≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞')

@bot.message_handler(commands=['photo3'])
def photo3(message):
    file = open('photo3.jpg', 'rb')
    bot.send_photo(message.chat.id, file, '—Ç—Ä–µ—Ç–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞')

@bot.message_handler(commands=['photo_anime'])
def photo_anime1(message):
    file = open('photo_anime1.jpeg', 'rb')
    bot.send_photo(message.chat.id, file, '–§–æ—Ç–æ –¥–ª—è –∞–Ω–∏–º–µ')


@bot.message_handler(commands=['switch'])
def switch(message):
    kb = types.InlineKeyboardMarkup()
    switch = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç —á–∞—Ç', switch_inline_query='–¢—É—Ä —ç–π —Å–∞—Å—ã–±–∞–π üòÇüòÇüòÇ')
    kb.add(switch)
    bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ', reply_markup=kb)

@bot.message_handler(commands=['callback'])
def callback(message):
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn = types.InlineKeyboardButton(text='–°–∞–ª–∞–º', callback_data='btn1')
    btn1 = types.InlineKeyboardButton(text='–í–∞–∞–ª–µ–π–∫—É–º', callback_data='btn2')
    kb.add(btn, btn1)
    bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –∏–∑ –Ω–∏—Ö', reply_markup=kb)
    
@bot.callback_query_handler(func=lambda callback: callback.data)
def check_callback_data(callback):
    if callback.data == 'btn1':
        kb = types.InlineKeyboardMarkup(row_width=1)
        btn = types.InlineKeyboardButton(text='–∞–ª–µ–π–∫—É–º', callback_data='btn2')
        btn1 = types.InlineKeyboardButton(text='—Å–∞–ª–∞–º', callback_data='btn1')
        kb.add(btn, btn1)
        bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.id, text='—Ö–∏—Ö–∏—Ö üòÇ \n –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è!!! –¥–∞–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–∂–∏–º–∞–π', reply_markup=kb)    

@bot.message_handler(commands=['swit'])
def switch(message):
    markup = types.InlineKeyboardMarkup()
    url = types.InlineKeyboardButton(text='URL', url='https://www.edx.org/')
    switch = types.InlineKeyboardButton(text='Swit', switch_inline_query='hello üë®üèª‚Äçüíª')
    callback = types.InlineKeyboardButton(text='Callback', callback_data='hello')
    markup.add(url, switch, callback)
    bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ üë®üèª‚Äçüíª', reply_markup=markup)

@bot.message_handler(commands=['python'])
def python_txt(message):
    text = open('python.txt', 'r', encoding="utf8").read()
    for mess in util.smart_split(text, 3000):
        bot.send_message(message.chat.id, mess)

@bot.message_handler(commands=['django'])
def django_txt(message):
    text = open('django.txt', 'r', encoding="utf8").read()
    for mess in util.smart_split(text, 3000):
        bot.send_message(message.chat.id, mess)
        
        
# @bot.message_handler(commands=['pdf'])
# def pdf(message):
#     file = open('Python_–ü–æ–ª–Ω–æ–µ_—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ.pdf', 'r', encoding='utf-8').read()
#     ot.send_document(message.chat.id, file, 'pdf')  

@bot.message_handler(func=lambda message: message.text.lower() in ['—Ñ–∞–π–ª'])
def echo_all(message):
    bot.reply_to(message, '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞')
    file = open('file.rar', 'rb')
    bot.send_document(message.chat.id, file)

@bot.message_handler(commands=['sticer_football'])
def sticer(message):
    bot.send_dice(message.chat.id, '‚öΩÔ∏è')


@bot.message_handler(commands=['sticer_basketball'])
def sticer_basketball(message):
    bot.send_dice(message.chat.id, 'üèÄ')

@bot.message_handler(commands=['sticer_2'])
def sticer_2(message):
    bot.send_dice(message.chat.id, 'üéØ')
    
@bot.message_handler(commands=['sticer_bowling'])
def sticer_bowling(message):
    bot.send_dice(message.chat.id, 'üé≥')
    
@bot.message_handler(commands=['sticer_casino'])
def sticer_casino(message):
    bot.send_dice(message.chat.id, 'üé∞')


bot.polling() 