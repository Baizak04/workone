import telebot
from telebot import types

bot = telebot.TeleBot('6226915086:AAEN1Sr9j2RJnfrZrGXZKBkdEQwPQ7LoOEY')

@bot.message_handler(commands=['site'])
def start(message):
    mess = f'–ü—Ä–∏–≤–µ—Ç,–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç \n –∫–æ–º–∞–Ω–¥—ã \n /start, /LinkedinBaizaka, /palindrome_leetcode, /AbstractBaseUser, /SQLRoadmap, /CreatedUser, /AbstractUser_YouTube  <b>{message.from_user.first_name} \n –í—ã–±–∏—Ä–∞–π –ø–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞—á–∏–Ω–∞–π –∏–∑—É—á–∞—Ç—å \n <u>–£–¥–∞—á–∏ —Ç–µ–±–µ üòäüëç</u></b>'
    bot.send_message(message.chat.id, mess, parse_mode='html')


@bot.message_handler(content_types=['text'])
def get_user_text(message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç":
        bot.send_message(message.chat.id, "–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç", parse_mode='html')
    elif message.text.lower() == "–ö–ª—É–± –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤":
        bot.send_message(message.chat.id, "—Å–∞–ª–∞–º –≤—Å–µ–º –≤—ã —Å–∞–º—ã–µ –ª—É—á—à–∏–µ", parse_mode='html')
    elif message.text == "id":
        bot.send_message(message.chat.id, f"–¢–≤–æ–π ID: {message.from_user.id}", parse_mode='html')
    elif message.text == "photo":
        photo = open('img/linux.jpg', 'rb')
        bot.send_photo(message.chat.id, photo )
    # else:
    #     bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª", parse_mode='html')


@bot.message_handler(content_types=['photo'])
def get_user_photo(message):
    bot.send_message(message.chat.id, '–í–∞—É –∫—Ä—É—Ç–æ–µ —Ñ–æ—Ç–æ üòç')
    



    

@bot.message_handler(commands=['LinkedinBaizaka'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å –º–æ–π linkedin —Å–∞–π—Ç", url="https://www.linkedin.com/in/baizak-nadurbekov/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)
    
@bot.message_handler(commands=['palindrome_leetcode'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç palindrome leetcode", url="https://leetcode.com/problems/longest-palindrome/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —á—Ç–æ–±—ã –≤—ã–ø–æ–ª—å–Ω–∏—Ç—å –∑–∞–¥–∞—á–∫—É', reply_markup=markup)
    
@bot.message_handler(commands=['AbstractBaseUser'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç django AbstractBaseUser", url="https://tproger.ru/translations/extending-django-user-model/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —É—á–∏—Ç—å Django AbstractBaseUser', reply_markup=markup)


@bot.message_handler(commands=['SQLRoadmap'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–†–æ–∞–¥–º–∞–ø –ø–æ SQL ", url="https://habr.com/ru/articles/725414/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ roadmap sql', reply_markup=markup)

@bot.message_handler(commands=['CreatedUser'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç django Created User", url="https://django.fun/ru/articles/tips/sozdanie-polzovatelskoj-modeli-user-v-django/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —É—á–∏—Ç—å Django Created User', reply_markup=markup)




@bot.message_handler(commands=['AbstractUser_YouTube'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å YouTube –≤–∏–¥–µ–æ", url="https://www.youtube.com/watch?v=sjJV0Ru1q0U&ab_channel=Denis"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ YouTube –∫–∞–Ω–∞–ª', reply_markup=markup)
    

@bot.message_handler(commands=['help'])
def website(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    website = types.KeyboardButton('–≤–µ–± —Å–∞–π—Ç')
    start = types.KeyboardButton('Start')
    markup.add(website, start)    
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)


bot.polling(none_stop=True)