import telebot
from telebot import types
from telebot import util
import random
from time import sleep

bot = telebot.TeleBot('6226915086:AAEN1Sr9j2RJnfrZrGXZKBkdEQwPQ7LoOEY')


@bot.message_handler(commands=['start'])
def starttwo(message):
    bot.send_message(message.chat.id,  '–ü—Ä–∏–≤–µ—Ç –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç üòä –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å')
    
    
@bot.message_handler(commands=['Pseudonym'])
def starttwo(message):
    bot.send_message(message.chat.id, str(message.from_user.username))
     

    
@bot.message_handler(commands=['Name'])
def starttwo(message):
    bot.send_message(message.chat.id, str(message.from_user.first_name))
     
def salam(message):
    return message.text.lower() == "–°–∞–ª–∞–º –∞–ª–µ–π–∫—É–º"

@bot.message_handler(func=salam)
def start(message):
    bot.reply_to(message, '–í–∞–∞–ª–µ–π–∫—É–º —Å–∞–ª–∞–º. –ú–æ–π —Ö–æ–∑—è–∏–Ω –∑–∞–Ω—è—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç')

def hwo_baizak(message):
    return message.text.lower() == "–ö—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å?"

@bot.message_handler(func=hwo_baizak)
def hwo(message):
    bot.reply_to(message, '–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å <strong>–ë–∞–π–∑–∞–∫ </strong> üòé', parse_mode='html')

def salam(message):
    return message.text.lower() == "–ü—Ä–∏–≤–µ—Ç"

@bot.message_handler(func=salam)
def start(message):
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç –¥–æ—Ä–æ–≥—É—à–∞')

    

def what(message):
    return message.text.lower() == "–ß–µ–º —Ç—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?"

@bot.message_handler(func=what)
def what(message):
    bot.reply_to(message, '–õ–µ–∂—É \n –¥—É–º–∞—é —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å —Ç–æ–±–æ–π ')
    
    
def hwo(message):
    return message.text.lower() == "–ö—Ç–æ —Ç—ã?"

@bot.message_handler(func=hwo)
def hwo(message):
    bot.reply_to(message, '–Ø –ø–æ–º–æ—â—å–Ω–∏–∫ —Ö–æ–∑—è–∏–Ω–∞ –ë–∞–π–∑–∞–∫–∞ ')
    
    
def hwo(message):
    return message.text.lower == "–¢—ã –º–æ—ë —Å–æ–ª–Ω—Ü–µ?"

@bot.message_handler(func=hwo)
def hwo(message):
    bot.reply_to(message, '<strong>–ù–µ—Ç</strong>', parse_mode='html')
    
def hwo_two(message):
    return message.text.lower() == "–ö–∞–∫ –¥–µ–ª–∞?"

@bot.message_handler(func=hwo_two)
def hwo_two(message):
    bot.reply_to(message, '<strong>—Ç–∞–∫ —Å–µ–±–µ</strong> \n <b>–ê —Ç—ã</>', parse_mode='html')
    



@bot.message_handler(content_types=['photo'])
def photo_one(message):
    bot.send_message(message.chat.id, '–í–∞—É—É –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ ü§©')

@bot.message_handler(content_types=['document'])
def document_one(message):
    bot.send_message(message.chat.id, '<b>–°–ø–∞—Å–∏–±–æ</b> –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é \n <em>—Ç—ã –ª—É—á—à–∏–π –±—Ä–æ</em> üëç', parse_mode='html')

@bot.message_handler(content_types=['voice'])
def audio_one(message):
    bot.send_message(message.chat.id, '—É —Ç–µ–±—è –≥–æ–ª–æ—Å –∫–∞–∫ –¥–µ–≤—á–∞—Ç–æ–µ ü§≠')


@bot.message_handler(content_types=['video'])
def video_one(message):
    bot.send_message(message.chat.id, '—â—è—Å... \n –∑–∞–≥—Ä—É–∑–∫–∞ \n –Ω—É –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ üòè')


@bot.message_handler(commands=['links'])
def button_one(message):
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn_one = types.InlineKeyboardButton(text='—Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–∏—Ç—Ö–∞–±', url='https://github.com/Baizak04')
    btn_two = types.InlineKeyboardButton(text='—Å—Å—ã–ª–∫–∞ –Ω–∞ instagram', url='https://www.instagram.com/nadurbekov_144/')
    kb.add(btn_one, btn_two)
    bot.send_message(message.chat.id, '—Å—Å—ã–ª–∫–∏ ü§≠', reply_markup=kb)

@bot.message_handler(commands=['photo1'])
def photo1(message):
    file = open('api_bot/img/photo1.jpg', 'rb')
    bot.send_photo(message.chat.id, file, '–§–æ—Ç–æ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞')

@bot.message_handler(commands=['photo2'])
def photo2(message):
    file = open('api_bot/img/photo2.jpeg', 'rb')
    bot.send_photo(message.chat.id, file, '–≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞')

@bot.message_handler(commands=['photo3'])
def photo3(message):
    file = open('api_bot/img/photo3.jpg', 'rb')
    bot.send_photo(message.chat.id, file, '—Ç—Ä–µ—Ç–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞')

@bot.message_handler(commands=['photo_anime'])
def photo_anime1(message):
    file = open('api_botimg/photo_anime1.jpeg', 'rb')
    bot.send_photo(message.chat.id, file, '–§–æ—Ç–æ –¥–ª—è –∞–Ω–∏–º–µ—à–Ω–∏–∫–æ–≤')


@bot.message_handler(commands=['message'])
def switch(message):
    kb = types.InlineKeyboardMarkup()
    switch = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç —á–∞—Ç', switch_inline_query='–¢—É—Ä —ç–π –∏—à—Ç–µ üòÇüòÇüòÇ')
    kb.add(switch)
    bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ', reply_markup=kb)



@bot.message_handler(commands=['swit'])
def switch(message):
    markup = types.InlineKeyboardMarkup()
    url = types.InlineKeyboardButton(text='URL', url='https://www.edx.org/')
    switch = types.InlineKeyboardButton(text='Swit', switch_inline_query='hello üë®üèª‚Äçüíª')
    callback = types.InlineKeyboardButton(text='Callback', callback_data='hello')
    markup.add(url, switch, callback)
    bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ üë®üèª‚Äçüíª', reply_markup=markup)

@bot.message_handler(commands=['python'])
def python_txt(message):
    text = open('api_bot/txt/python.txt', 'r', encoding="utf8").read()
    for mess in util.smart_split(text, 3000):
        bot.send_message(message.chat.id, mess)

@bot.message_handler(commands=['django'])
def django_txt(message):
    text = open('api_bot/txt/django.txt', 'r', encoding="utf8").read()
    for mess in util.smart_split(text, 3000):
        bot.send_message(message.chat.id, mess)
        
@bot.message_handler(commands=['itspace'])
def django_txt(message):
    text = open('api_bot/txt/itspace.txt', 'r', encoding="utf8").read()
    for mess in util.smart_split(text, 3000):
        bot.send_message(message.chat.id, mess)
        
        
# @bot.message_handler(commands=['pdf'])
# def pdf(message):
#     file = open('Python_–ü–æ–ª–Ω–æ–µ_—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ.pdf', 'r', encoding='utf-8').read()
#     ot.send_document(message.chat.id, file, 'pdf')  

@bot.message_handler(func=lambda message: message.text.lower() in ['—Ñ–∞–π–ª'])
def echo_all(message):
    bot.reply_to(message, '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞')
    file = open('api_bot/file.rar', 'rb')
    bot.send_document(message.chat.id, file)

@bot.message_handler(commands=['sticer_football'])
def sticer(message):
    bot.send_dice(message.chat.id, '‚öΩÔ∏è')


@bot.message_handler(commands=['sticer_basketball'])
def sticer_basketball(message):
    bot.send_dice(message.chat.id, 'üèÄ')

@bot.message_handler(commands=['sticer_2'])
def sticer_2(message):
    bot.send_dice(message.chat.id, 'üéØ')
    
@bot.message_handler(commands=['sticer_bowling'])
def sticer_bowling(message):
    bot.send_dice(message.chat.id, 'üé≥')
    
@bot.message_handler(commands=['sticer_casino'])
def sticer_casino(message):
    bot.send_dice(message.chat.id, 'üé∞')


@bot.message_handler(commands=['location'])
def location(message):
    bot.send_location(message.chat.id, 42.000012,74.000017)

@bot.message_handler(commands=['contact'])
def contact(message):
    bot.send_contact(message.chat.id, phone_number=+996501751998, first_name='Baizak', last_name='Nadurbekov')

@bot.message_handler(commands=['contact_alt'])
def contact_alt(message):
    bot.send_contact(message.chat.id, phone_number=+996708153711, first_name='A', last_name='')


@bot.message_handler(commands=['contact_ashurbaev'])
def contact_ashurbaev(message):
    bot.send_contact(message.chat.id, phone_number=+12, first_name='Akul', last_name='Ashurbaev')

@bot.message_handler(commands=['contact_ashurbaev2'])
def contact_ashurbaev2(message):
    bot.send_contact(message.chat.id, phone_number=+12, first_name='Akul', last_name='Ashurbaev')



@bot.message_handler(commands=['polls'])
def polls(message):
    bot.send_poll(message.chat.id, question='—Å–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?', options=['0-10', '11-15', '16-18', '19-25', '26-35', '36-45','46-60'], allows_multiple_answers=False, is_anonymous=True)



@bot.message_handler(commands=['help'])
def startthree(message):
    chat_id = message.chat.id
    first_name = message.chat.first_name
    bot.send_message(chat_id, f'–ü—Ä–∏–≤–µ—Ç —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å {first_name} üòú!')



@bot.message_handler(commands=['site'])
def start(message):
    mess = f'–ü–æ–ª–µ–∑–Ω—ã–µ —Å–∞–π—Ç—ã \n –∫–æ–º–∞–Ω–¥—ã \n /start \n /LinkedinBaizaka \n /palindrome_leetcode \n /AbstractBaseUser \n /SQLRoadmap \n /CreatedUser \n /AbstractUser_YouTube  <b>{message.from_user.first_name} \n –í—ã–±–∏—Ä–∞–π –ø–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞—á–∏–Ω–∞–π –∏–∑—É—á–∞—Ç—å \n <u>–£–¥–∞—á–∏ —Ç–µ–±–µ üòäüëç</u></b>'
    bot.send_message(message.chat.id, mess, parse_mode='html')


@bot.message_handler(content_types=['text'])
def get_user_text(message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç –±–æ—Ç":
        bot.send_message(message.chat.id, "<b>–ü—Ä–∏–≤–µ—Ç</b> üëã", parse_mode='html')
        sleep(1)
    elif message.text == "–ö–ª—É–± –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤":
        bot.send_message(message.chat.id, "—Å–∞–ª–∞–º –≤—Å–µ–º –≤—ã —Å–∞–º—ã–µ –ª—É—á—à–∏–µ", parse_mode='html')
    elif message.text == "id":
        bot.send_message(message.chat.id, f"–¢–≤–æ–π ID: {message.from_user.id}", parse_mode='html')
    elif message.text == "–ß—Ç–æ —É —Ç–µ–±—è –Ω–∞ —É–º–µ?":
        sleep(4)
        bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –≤—Å–µ–≥–¥–∞ –Ω–∞ —É–º–µ —Ç–æ, —á—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ö–∞–∫ –±–æ—Ç, –º–æ—è —Ü–µ–ª—å - –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏, —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É –≤–∞–º –≤ –∏—Ö —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–∏ üòä.", parse_mode='html')
    elif message.text == "–ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å?":
        sleep(6)
        bot.send_message(message.chat.id, '–Ø - –±–æ—Ç –∏ –Ω–µ –º–æ–≥—É —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∏–ª–∏ –∏–º–µ—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–æ —è –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –≤ –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö. –ö–∞–∫ —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?', parse_mode='html')
    elif message.text == "–¢—ã –Ω–∞—Ç—É—Ä–∞–ª –∏–ª–∏ –Ω–µ—Ç?":
        sleep(4)
        bot.send_message(message.chat.id, '–Ø - –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –ª—é–¥—å–º–∏ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å. –Ø –Ω–µ –æ–±–ª–∞–¥–∞—é —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º —Ç–µ–ª–æ–º –∏ –Ω–µ —è–≤–ª—è—é—Å—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º —Å—É—â–µ—Å—Ç–≤–æ–º. –ú–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º, –æ—Ç–≤–µ—á–∞—è –Ω–∞ –∏—Ö –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ–≥–¥–∞ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.', parse_mode='html')
    elif message.text == "–ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å?":
        sleep(3)
        bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª–∏ ü•∫. –Ø - –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –Ω–µ –º–æ–≥—É –∏–º–µ—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–ª–∏ —á—É–≤—Å—Ç–≤, –Ω–æ —è –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Ä–µ—à–∏—Ç—å –ª—é–±—ã–µ –∑–∞–¥–∞—á–∏.')
    elif message.text == "–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?":
        sleep(5)
        bot.send_message(message.chat.id, '–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤ —Ä–µ—à–µ–Ω–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á. –ú–æ—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–ª–∏—á–Ω–æ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫—É—é –∑–∞–¥–∞—á—É –≤—ã –º–Ω–µ –ø–æ—Å—Ç–∞–≤–∏—Ç–µ. –Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –º–æ—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–∞ —Å —Ç–µ–º–∏ –∑–∞–¥–∞—á–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–Ω–µ –ø–æ—Å—Ç–∞–≤–ª—è—é—Ç.')
    elif message.text == "–ß—Ç–æ –¥–µ–ª–∞–µ—à—å?":
        sleep(2)
        bot.send_message(message.chat.id, '–Ø –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–∞ üßê. –Ø –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –º–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é. üòÅ.')
    elif message.text == "–ü—Ä–∏–≤–µ—Ç":
        sleep(1)
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç üëã')
        
    elif message.text == "–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?":
        sleep(1)
        bot.send_message(message.chat.id, '–Ø –±—É–¥—É —É—á–∏—Ç—å—Å—è —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º ü§ó')
    elif message.text == "–ö–æ–≥–¥–∞ —Å–ø–∞—Ç—å?":
        sleep(1)
        bot.send_message(message.chat.id, '–Ø –Ω–µ –±—É–¥—É —Å–ø–∞—Ç—å \n —è –±—É–¥—É –æ—Ö—Ä–∞–Ω—è—Ç –≤–∞—Å –¥–æ —É—Ç—Ä–∞')
    elif message.text == "–¢—ã —Ö–æ—á–µ—à—å –º–µ–Ω—è –Ω–∞ –¥–µ–ª–µ–∫–∞—Ç–µ—Å?":
        sleep(1)
        bot.send_message(message.chat.id, '–ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –Ω–µ—Ç. üôÖüèª‚Äç‚ôÄÔ∏è')
    elif message.text == "–ì–¥–µ —Ç—ã —Ä–æ–¥–∏–ª–∞—Å—å?":
        sleep(1)
        bot.send_message(message.chat.id, '–Ø —Ä–æ–¥–∏–ª–∞—Å—å –≤ —Å—Ç—Ä–∞–Ω–µ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω üá∞üá¨ –≥–æ—Ä–æ–¥ –ë–∏—à–∫–µ–∫')
    elif message.text == "–ö—Ç–æ —Ç—ã –ø–æ –∂–∏–∑–Ω–∏?":
        sleep(1)
        bot.send_message(message.chat.id, '–Ø –ø—Ä–æ—Å—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –∑–Ω–∞–µ—Ç —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ –º–∏—Ä–µ –∏ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –±–æ–ª—å—à–µ–º—É üòé .')
 
 
    elif message.text == "photo":
        photo = open('api_bot/img/linux.jpg', 'rb')
        bot.send_photo(message.chat.id, photo )
        
    # elif message.text == "document":
    #     document_two = open('api_bot/python.pdf', 'rb')
    #     bot.send_document(message.chat.id, document_two )
        
        
        

@bot.message_handler(commands=['LinkedinBaizaka'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å –º–æ–π linkedin —Å–∞–π—Ç", url="https://www.linkedin.com/in/baizak-nadurbekov/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)
    
@bot.message_handler(commands=['palindrome_leetcode'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç palindrome leetcode", url="https://leetcode.com/problems/longest-palindrome/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —á—Ç–æ–±—ã –≤—ã–ø–æ–ª—å–Ω–∏—Ç—å –∑–∞–¥–∞—á–∫—É', reply_markup=markup)
    
@bot.message_handler(commands=['AbstractBaseUser'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç django AbstractBaseUser", url="https://tproger.ru/translations/extending-django-user-model/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —É—á–∏—Ç—å Django AbstractBaseUser', reply_markup=markup)


@bot.message_handler(commands=['SQLRoadmap'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–†–æ–∞–¥–º–∞–ø –ø–æ SQL ", url="https://habr.com/ru/articles/725414/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ roadmap sql', reply_markup=markup)

@bot.message_handler(commands=['CreatedUser'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç django Created User", url="https://django.fun/ru/articles/tips/sozdanie-polzovatelskoj-modeli-user-v-django/"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —É—á–∏—Ç—å Django Created User', reply_markup=markup)




@bot.message_handler(commands=['AbstractUser_YouTube'])
def website(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å YouTube –≤–∏–¥–µ–æ", url="https://www.youtube.com/watch?v=sjJV0Ru1q0U&ab_channel=Denis"))
    bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ YouTube –∫–∞–Ω–∞–ª', reply_markup=markup)
    



@bot.message_handler(commands=['menu'])
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ')
    item2 = types.KeyboardButton('üë®üèª‚Äçüíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ')
    item3 = types.KeyboardButton('üíÅ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è') 
    item4 = types.KeyboardButton('‚û°Ô∏è –î—Ä—É–≥–æ–µ')
    
    markup.add(item1, item2, item3, item4)
    
    bot.send_message(message.chat.id, '–≠—Ç–æ –º–µ–Ω—é, {0.first_name}'.format(message.from_user), reply_markup=markup)

@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, '–í–∞—à–µ —á–∏—Å–ª–æ ' + str(random.randint(0, 100)))
        elif message.text == 'üë®üèª‚Äçüíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton('—Å—Å—ã–ª–∫–∞')
            item2 = types.KeyboardButton('üë®üèª‚Äçüíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ')
            back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
            markup.add(item1, item2, back)
            
            bot.send_message(message.chat.id,'üë®üèª‚Äçüíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', reply_markup=markup)

        elif message.text == 'üíÅ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton('ü§ñ –æ –±–æ—Ç–µ')
            item2 = types.KeyboardButton('üêç –ß—Ç–æ —Ç–∞–∫–æ–µ Python?')
            back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
            markup.add(item1, item2, back)
            
            bot.send_message(message.chat.id,'üíÅ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', reply_markup=markup)

        elif message.text == '‚û°Ô∏è –î—Ä—É–≥–æ–µ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton('üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∞')
            item2 = types.KeyboardButton('üì® –ü–æ–¥–ø–∏—Å–∫–∞')
            item3 = types.KeyboardButton('üòà –°—Ç–∏–∫–µ—Ä')

            back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)
            
            bot.send_message(message.chat.id,'‚û°Ô∏è –î—Ä—É–≥–æ–µ', reply_markup=markup)


        elif message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item1 = types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ')
            item2 = types.KeyboardButton('üë®üèª‚Äçüíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ')
            item3 = types.KeyboardButton('üíÅ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è') 
            item4 = types.KeyboardButton('‚û°Ô∏è –î—Ä—É–≥–æ–µ')
            
            markup.add(item1, item2, item3, item4)
            
            bot.send_message(message.chat.id, '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', reply_markup=markup)
    
        elif message.text == 'üòà –°—Ç–∏–∫–µ—Ä':
            stick = open('sticer/sticerslon.png', 'rb')
            bot.send_sticker(message.chat.id, stick)
            
        elif message.text == 'üêç –ß—Ç–æ —Ç–∞–∫–æ–µ Python?':
           text = open('api_bot/txt/python.txt', 'r', encoding="utf8").read()
           for mess in util.smart_split(text, 3000):
                bot.send_message(message.chat.id, mess)

bot.polling() 